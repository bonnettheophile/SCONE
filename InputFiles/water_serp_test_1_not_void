type timeDependentPhysicsPackage;

pop      1000000;
timeSteps   70;
XSdata   ce;
dataType ce;
timeIncrement 1.E-05;
//buffer 500000;
//combing 1; //toggle on or off
//precursors 0; //toggle on or off
//batches 100; // not implemented!!
cycles 5; //15

outputFormat asciiJSON;
collisionOperator { neutronCE {type neutronCEstd; minEnergy 1E-11;}

}

transportOperator { type transportOperatorDT;
                  }

source {
  type pointSource;
  r (0.0 0.0 0.0);
  //dir (0.0 0.0 1.0);
  particle neutron;
  E 14.1;
}

tally  {
  flux_time { type collisionClerk;
    //map { type multiMap; maps (map1 map2); // this supported properly in current implementation?
    //map1 { type cellMap; cells (8); }
    //map2 { type timeMap; grid lin; min 0.0; max 7E-04; N 70;}
    //} //make this work on averaged accross all cells, then fix multimap on time dependent


    map { type timeMap; grid lin; min 0.0; max 7E-04; N 70;}
    response (flux); flux {type fluxResponse;}
    handleVirtual 1;
    batchSize 5;
  }
}


geometry {
    type geometryStd;
    boundary (0 0 0 0 0 0);
    graph {type shrunk;}

    surfaces { 
      outerBox { id 1; type box; origin (0 0 0); halfwidth (33.02 33.02 33.02); } 
      innerBox { id 2; type box; origin (0 0 0); halfwidth (30.48 30.48 30.48); } 
      }

    cells { 
      polyBox { id 1; type simpleCell; surfaces (-1 2); filltype mat; material m1;} 
      cadmium { id 2; type simpleCell; surfaces (-2); filltype mat; material m4;}
      }


    universes
    {
      root{id 1; type rootUniverse; border 1; fill u<2>;}
      geom { id 2; type cellUniverse; cells (1 2);}
    }
}

nuclearData {
  handles {
    ce { type aceNeutronDatabase; aceLibrary $SCONE_ACE;} }
  materials {

    //water
    m1 {
      temp 12345;
      composition {
        1001.03    0.06639;
        8016.03   0.03347;}
      //moder { 1001.00 h-h2o-293; }
    }
    //cadmium
    m4 {
      temp 12345;
      composition {
        //48106.03	7.19818E-05;
        //48108.03	5.11781E-05;
        //48110.03	0.00072;
        //48111.03	0.00073;
        //48112.03	0.00138;
        //48113.03	0.00070;
        //48114.03	0.00165;
        48116.03	0.00043;        
      }
    }
    //Al can
    //m4 {
    // temp 12345;
    //  composition {
    //    13027.03  0.05803;
    //  }
    //}

    //m4 {
    //  temp 12345;
    //  composition {
    //    2003.03  0.00039;
    //  }
    //}
}

}




