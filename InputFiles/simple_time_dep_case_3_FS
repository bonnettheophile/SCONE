type fixedSourcePhysicsPackage;

pop      1000000;
//timeSteps   70;
XSdata   ce;
dataType ce;
//timeIncrement 1.E-05;
//buffer 500000;
//combing 1; //toggle on or off
//precursors 0; //toggle on or off
//batches 100; // not implemented!!
cycles 7;

outputFormat asciiJSON;
collisionOperator { neutronCE {type neutronCEstd;}
                  }
transportOperator { type transportOperatorDT;
                  }

source {
  type pointSource;
  r (0.0 0.0 0.0);
  //dir (0.0 0.0 0.0); no dir, isentropic
  particle neutron;
  E 14.1;
}

tally  {
  flux_time { type collisionClerk;
    //map { type multiMap; maps (map1 map2); // this supported properly in current implementation?
    //map1 { type cellMap; cells (8); }
    //map2 { type timeMap; grid lin; min 0.0; max 7E-04; N 70;}
    //} //make this work on averaged accross all cells, then fix multimap on time dependent
    map { type energyMap; grid lin; min 0.0; max 14.1; N 70;}
    response (flux); flux {type fluxResponse;}
    handleVirtual 1;
  }
}

geometry {
    type geometryStd;
    boundary (0 0 0 0 0 0);
    graph {type shrunk;}

    surfaces
    {
      sphereBound { type sphere; id 1; origin ( 0.0 0.0 0.0); radius 50.0; } //failing at radius 5, why? Increase to 50 doesnt fail
    } //what radius did valeria use? 5,10,20,50? 5 failed here, so maybe she did 50? or 20? Probably 50!

    cells
    {
    }

    universes
    {

      root
      {
	  id 1;
	  type rootUniverse;
	  border 1;
	  fill m1;
      }
    }
}

nuclearData {
  handles {
    ce { type aceNeutronDatabase; aceLibrary $SCONE_ACE;} }
  materials {

    m1 {
      temp 12345;
      composition {
        1001.03   0.06639;
        8016.03   0.03347;
        //1001.03  0.06639;
        }
    }
}
}
